
import /init.semc.usb.rc

on early-init
    start ueventd

on init
    export PATH /sbin
    export LD_LIBRARY_PATH .:/sbin
    export ANDROID_ROOT /system
    export ANDROID_DATA /data
    export EXTERNAL_STORAGE /sdcard

    mkdir /boot
    mkdir /sdcard
    mkdir /sd-ext
    #mkdir /datadata
    #mkdir /emmc
    mkdir /system
    mkdir /data
    mkdir /cache
    mount /tmp /tmp tmpfs

    #symlink /sbin/sh /system/bin/sh
    
    chown root shell /tmp
    chmod 0775 /tmp

    write /sys/class/android_usb/android0/enable 0
    write /sys/class/android_usb/android0/idVendor 0fce
    write /sys/class/android_usb/android0/idProduct 615d
    write /sys/class/android_usb/android0/functions mass_storage,adb
    write /sys/class/android_usb/android0/iManufacturer ${ro.product.manufacturer}
    write /sys/class/android_usb/android0/iProduct ${ro.product.model}
    write /sys/class/android_usb/android0/iSerial ${ro.serialno}
    

on boot
    ifup lo
    hostname localhost
    domainname localdomain

    class_start default

on post-fs
    mount vfat /dev/block/mmcblk0p1 /sdcard

service ueventd /sbin/ueventd
    critical

#service recovery /sbin/recovery
service recovery /sbin/bootrec
    oneshot

service console /sbin/sh
    class core
    console
    disabled
    user shell
    group log

service adbd /sbin/adbd recovery
    disabled

# Always start adbd on userdebug and eng builds
on property:ro.debuggable=1
    write /sys/class/android_usb/android0/enable 1
    start adbd
    start console
    setprop service.adb.root 1

# Restart adbd so it can run as root
on property:service.adb.root=1
    write /sys/class/android_usb/android0/enable 0
    restart adbd
    write /sys/class/android_usb/android0/enable 1

